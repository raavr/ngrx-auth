{"version":3,"sources":["webpack:///../node_modules/@ngrx/entity/fesm5/entity.js","webpack:///./src/app/accounts/accounts-routing.module.ts","webpack:///./src/app/accounts/accounts.module.ts","webpack:///./src/app/accounts/actions/accounts.action.ts","webpack:///./src/app/accounts/actions/profile.action.ts","webpack:///./src/app/accounts/components/profile-detail.component.ts","webpack:///./src/app/accounts/containers/accounts.component.ts","webpack:///./src/app/accounts/containers/profile.component.ts","webpack:///./src/app/accounts/effects/profile.effects.ts","webpack:///./src/app/accounts/guards/browse-accounts.guard.ts","webpack:///./src/app/accounts/guards/profile.guard.ts","webpack:///./src/app/accounts/reducers/accounts.reducer.ts","webpack:///./src/app/accounts/reducers/browse-accounts.reducer.ts","webpack:///./src/app/accounts/reducers/index.ts","webpack:///./src/app/accounts/reducers/profile.reducer.ts","webpack:///./src/app/accounts/services/browse-accounts.service.ts","webpack:///./src/app/accounts/services/profile.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC6C;AACH;;AAE1C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,0CAA0C,kBAAkB;AAC5D,+CAA+C,uBAAuB;AACtE,wBAAwB,kEAAc;AACtC,0CAA0C,qBAAqB,EAAE;AACjE,SAAS;AACT,0BAA0B,kEAAc,4BAA4B,mBAAmB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAc;AACrC,4BAA4B,kEAAc;AAC1C,uBAAuB,kEAAc;AACrC,yBAAyB,kEAAc;AACvC;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,8BAA8B,UAAU,uCAAuC;AAC/E;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,oBAAoB;AAC3G;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6CAA6C,EAAE;AAC9F;AACA,oCAAoC,8BAA8B,EAAE;AACpE,iCAAiC,mCAAmC,EAAE;AACtE;AACA,wDAAwD,6BAA6B,EAAE;AACvF;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oCAAoC,EAAE;AAC1F;AACA;AACA,iEAAiE,2CAA2C,EAAE;AAC9G;AACA,yDAAyD,0BAA0B,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,oBAAoB;AAC3G;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,4DAA4D,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gDAAgD,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qDAAqD,0CAA0C,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,oBAAoB;AAC7G;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C,yBAAyB,qDAAqD,oBAAoB,EAAE,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2C;AAC3C;;;;;;;;;;;;;;;;;;;;;;;ACjeyC;AACc;AACW;AACZ;AACe;AACD;AAEpE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE;IACnC;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,8EAAgB;QAC3B,WAAW,EAAE;YACX,kEAAY;SACb;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,gFAAiB;QAC5B,WAAW,EAAE;YACX,iFAAmB;SACpB;KACF;CACF,CAAC;AAMF;I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","file":"accounts-accounts-module.js","sourcesContent":["/**\n * @license NgRx 7.0.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\nfunction createInitialStateFactory() {\n    function getInitialState(additionalState) {\n        if (additionalState === void 0) { additionalState = {}; }\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState: getInitialState };\n}\n\nfunction createSelectorsFactory() {\n    function getSelectors(selectState) {\n        var selectIds = function (state) { return state.ids; };\n        var selectEntities = function (state) { return state.entities; };\n        var selectAll = createSelector(selectIds, selectEntities, function (ids, entities) {\n            return ids.map(function (id) { return entities[id]; });\n        });\n        var selectTotal = createSelector(selectIds, function (ids) { return ids.length; });\n        if (!selectState) {\n            return {\n                selectIds: selectIds,\n                selectEntities: selectEntities,\n                selectAll: selectAll,\n                selectTotal: selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors: getSelectors };\n}\n\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar DidMutate;\n(function (DidMutate) {\n    DidMutate[DidMutate[\"EntitiesOnly\"] = 0] = \"EntitiesOnly\";\n    DidMutate[DidMutate[\"Both\"] = 1] = \"Both\";\n    DidMutate[DidMutate[\"None\"] = 2] = \"None\";\n})(DidMutate || (DidMutate = {}));\nfunction createStateOperator(mutator) {\n    return function operation(arg, state) {\n        var clonedEntityState = {\n            ids: __spread(state.ids),\n            entities: __assign({}, state.entities),\n        };\n        var didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return __assign({}, state, { entities: clonedEntityState.entities });\n        }\n        return state;\n    };\n}\n\nfunction selectIdValue(entity, selectId) {\n    var key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction createUnsortedStateAdapter(selectId) {\n    function addOneMutably(entity, state) {\n        var key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    function addManyMutably(entities, state) {\n        var e_1, _a;\n        var didMutate = false;\n        try {\n            for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function addAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    function removeManyMutably(keysOrPredicate, state) {\n        var keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter(function (key) { return keysOrPredicate(state.entities[key]); });\n        var didMutate = keys\n            .filter(function (key) { return key in state.entities; })\n            .map(function (key) { return delete state.entities[key]; }).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter(function (id) { return id in state.entities; });\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    function takeNewKey(keys, update, state) {\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectIdValue(updated, selectId);\n        var hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function updateManyMutably(updates, state) {\n        var newKeys = {};\n        updates = updates.filter(function (update) { return update.id in state.entities; });\n        var didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map(function (id) { return newKeys[id] || id; });\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    function mapMutably(map, state) {\n        var changes = state.ids.reduce(function (changes, id) {\n            var change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id: id, changes: change });\n            }\n            return changes;\n        }, []);\n        var updates = changes.filter(function (_a) {\n            var id = _a.id;\n            return id in state.entities;\n        });\n        return updateManyMutably(updates, state);\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var e_2, _a;\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_2 = __values(entities), entities_2_1 = entities_2.next(); !entities_2_1.done; entities_2_1 = entities_2.next()) {\n                var entity = entities_2_1.value;\n                var id = selectIdValue(entity, selectId);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (entities_2_1 && !entities_2_1.done && (_a = entities_2.return)) _a.call(entities_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(addAllMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\nvar __values$1 = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction createSortedStateAdapter(selectId, sort) {\n    var _a = createUnsortedStateAdapter(selectId), removeOne = _a.removeOne, removeMany = _a.removeMany, removeAll = _a.removeAll;\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    function addManyMutably(newModels, state) {\n        var models = newModels.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    function addAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    function updateManyMutably(updates, state) {\n        var models = [];\n        var didMutateIds = updates.filter(function (update) { return takeUpdatedModel(models, update, state); }).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            var originalIds_1 = state.ids;\n            var updatedIndexes_1 = [];\n            state.ids = state.ids.filter(function (id, index) {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes_1.push(index);\n                    return false;\n                }\n            });\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes_1.every(function (i) { return state.ids[i] === originalIds_1[i]; })) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    function mapMutably(updatesOrMap, state) {\n        var updates = state.ids.reduce(function (changes, id) {\n            var change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id: id, changes: change });\n            }\n            return changes;\n        }, []);\n        return updateManyMutably(updates, state);\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var e_1, _a;\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_1 = __values$1(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                var id = selectIdValue(entity, selectId);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    function merge(models, state) {\n        models.sort(sort);\n        var ids = [];\n        var i = 0;\n        var j = 0;\n        while (i < models.length && j < state.ids.length) {\n            var model = models[i];\n            var modelId = selectIdValue(model, selectId);\n            var entityId = state.ids[j];\n            var entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach(function (model, i) {\n            state.entities[selectId(model)] = model;\n        });\n    }\n    return {\n        removeOne: removeOne,\n        removeMany: removeMany,\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(addAllMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\nvar __assign$1 = (undefined && undefined.__assign) || function () {\n    __assign$1 = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign$1.apply(this, arguments);\n};\nfunction createEntityAdapter(options) {\n    if (options === void 0) { options = {}; }\n    var _a = __assign$1({ sortComparer: false, selectId: function (instance) { return instance.id; } }, options), selectId = _a.selectId, sortComparer = _a.sortComparer;\n    var stateFactory = createInitialStateFactory();\n    var selectorsFactory = createSelectorsFactory();\n    var stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return __assign$1({ selectId: selectId,\n        sortComparer: sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n}\n\nvar Dictionary = /** @class */ (function () {\n    function Dictionary() {\n    }\n    return Dictionary;\n}());\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createEntityAdapter, Dictionary };\n//# sourceMappingURL=entity.js.map\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './containers/profile.component';\r\nimport { ProfileGuard } from './guards/profile.guard';\r\nimport { BrowseAccountsGuard } from './guards/browse-accounts.guard';\r\nimport { AccountsComponent } from './containers/accounts.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'profile' },\r\n  { \r\n    path: 'profile', \r\n    component: ProfileComponent,\r\n    canActivate: [\r\n      ProfileGuard\r\n    ], \r\n  },\r\n  { \r\n    path: 'browse', \r\n    component: AccountsComponent,\r\n    canActivate: [\r\n      BrowseAccountsGuard\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './containers/profile.component';\r\nimport { AccountsRoutingModule } from './accounts-routing.module';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ProfileEffects } from './effects/profile.effects';\r\nimport { reducers } from './reducers';\r\nimport { ProfileDetailComponent } from './components/profile-detail.component';\r\nimport { AccountsComponent } from './containers/accounts.component';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent, \r\n    ProfileDetailComponent, \r\n    AccountsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AccountsRoutingModule,\r\n    MaterialModule,\r\n    CoreModule,\r\n    StoreModule.forFeature('accounts', reducers),\r\n    EffectsModule.forFeature([ProfileEffects]),\r\n  ]\r\n})\r\nexport class AccountsModule { }\r\n","import { Action } from '@ngrx/store';\r\nimport { User } from 'src/app/auth/models/user';\r\n\r\nexport enum AccountsActionTypes {\r\n  GetAccountsSuccess = '[Accounts] Get Accounts Success',\r\n  GetAccountsFailure = '[Accounts] Get Accounts Failure'\r\n}\r\n\r\nexport class GetAccountsSuccess implements Action {\r\n  readonly type = AccountsActionTypes.GetAccountsSuccess\r\n\r\n  constructor(public payload: User[]) { }\r\n}\r\n\r\nexport class GetAccountsFailure implements Action {\r\n  readonly type = AccountsActionTypes.GetAccountsFailure;\r\n}\r\n\r\nexport type AccountsActionUnion = \r\n  | GetAccountsSuccess\r\n  | GetAccountsFailure;","import { Action } from '@ngrx/store';\r\nimport { User } from 'src/app/auth/models/user';\r\n\r\nexport enum ProfileActionTypes {\r\n  ProfileSuccess = '[Profile] Get Profile Success',\r\n  ProfileFailure = '[Profile] Get Profile Failure'\r\n}\r\n\r\nexport class ProfileSuccess implements Action {\r\n  readonly type = ProfileActionTypes.ProfileSuccess\r\n\r\n  constructor(public payload: User) { }\r\n}\r\n\r\nexport class ProfileFailure implements Action {\r\n  readonly type = ProfileActionTypes.ProfileFailure;\r\n}\r\n\r\nexport type ProfileActionUnion = \r\n  | ProfileSuccess\r\n  | ProfileFailure;","import { Component, OnInit, Input } from '@angular/core';\r\nimport { User } from 'src/app/auth/models/user';\r\n\r\n@Component({\r\n  selector: 'app-profile-detail',\r\n  template: `\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"{{avatar}}\">\r\n        <mat-card-title>{{name}}</mat-card-title>\r\n        <mat-card-subtitle>{{email}}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p><span class=\"profile__label\">Phone: </span>{{phone}}</p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n  styles: [`\r\n    mat-card {\r\n      margin: 0 15px 15px 0;\r\n      min-width: 270px;\r\n    }\r\n\r\n    .profile__label {\r\n      font-weight: 700;\r\n    }\r\n  `]\r\n})\r\nexport class ProfileDetailComponent {\r\n  @Input() profile: User;\r\n  \r\n  get name() {\r\n    return this.profile.name;\r\n  }\r\n\r\n  get email() {\r\n    return this.profile.email;\r\n  }\r\n\r\n  get phone() {\r\n    return this.profile.phone;\r\n  }\r\n\r\n  get avatar() {\r\n    return this.profile.avatar;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/auth/models/user';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromAccounts from '../reducers';\r\nimport * as fromRoot from '../../reducers';\r\n\r\n@Component({\r\n  selector: 'app-accounts',\r\n  template: `\r\n    <app-page-header title=\"Accounts\"></app-page-header>\r\n    <app-page-container>\r\n      <app-profile-detail *ngFor=\"let account of (accounts$ | async)\" [profile]=\"account\"></app-profile-detail>\r\n    </app-page-container>\r\n  `\r\n})\r\nexport class AccountsComponent {\r\n  accounts$: Observable<User[]>\r\n\r\n  constructor(private store: Store<fromRoot.State>) {\r\n    this.accounts$ = store.pipe(select(fromAccounts.getAccounts));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/auth/models/user';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromProfile from '../reducers';\r\nimport * as fromRoot from '../../reducers';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  template: `\r\n    <app-page-header title=\"My profile\"></app-page-header>\r\n    <app-page-container>\r\n      <app-profile-detail [profile]=\"profile$ | async\"></app-profile-detail>\r\n    </app-page-container>\r\n  `\r\n})\r\nexport class ProfileComponent {\r\n  profile$: Observable<User>\r\n\r\n  constructor(private store: Store<fromRoot.State>) {\r\n    this.profile$ = store.pipe(select(fromProfile.getProfile));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport * as ProfileActions from '../actions/profile.action';\r\nimport * as AccoutnsActions from '../actions/accounts.action';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthActionTypes } from '../../auth/actions/auth.actions';\r\n\r\n@Injectable()\r\nexport class ProfileEffects {\r\n\r\n  @Effect()\r\n  logout$ = this.actions$.pipe(\r\n    ofType(AuthActionTypes.Logout),\r\n    switchMap(() => [\r\n      new ProfileActions.ProfileFailure(),\r\n      new AccoutnsActions.GetAccountsFailure()\r\n    ])\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n  ) { }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport * as AccountsActions from '../actions/accounts.action';\r\nimport * as fromBrowse from '../reducers';\r\nimport * as AuthActions from 'src/app/auth/actions/auth.actions';\r\nimport { BrowseAccountsService } from '../services/browse-accounts.service';\r\n  \r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BrowseAccountsGuard implements CanActivate {\r\n  constructor(\r\n    private browseService: BrowseAccountsService, \r\n    private router: Router, \r\n    private store: Store<fromBrowse.State>\r\n  ) {}\r\n  \r\n  canActivate(): Observable<boolean> {\r\n    return this.browseService.getAllAccounts().pipe(\r\n      map(users => new AccountsActions.GetAccountsSuccess(users)),\r\n      tap((action: AccountsActions.GetAccountsSuccess) => this.store.dispatch(action)),\r\n      map(users => !!users),\r\n      catchError((error) => {\r\n        if(error.status === 401) {\r\n          this.store.dispatch(new AuthActions.Logout());\r\n        } else {\r\n          this.router.navigate(['/404']);\r\n        }\r\n        return of(false);\r\n      })\r\n    )\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable, of, combineLatest } from 'rxjs';\r\nimport { map, catchError, tap, switchMap, take } from 'rxjs/operators';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport * as ProfileActions from '../actions/profile.action';\r\nimport * as fromProfile from '../reducers';\r\nimport * as fromRoot from '../../reducers';\r\nimport * as fromAuth from '../../auth/reducers';\r\nimport * as AuthActions from 'src/app/auth/actions/auth.actions';\r\n  \r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileGuard implements CanActivate {\r\n  constructor(private profileService: ProfileService, private router: Router, private store: Store<fromRoot.State>) {}\r\n  \r\n  hasProfileInStore(): Observable<boolean> {\r\n    return combineLatest(\r\n      this.store.pipe(select(fromProfile.getAccountEntities)),\r\n      this.store.pipe(select(fromAuth.getUser)),\r\n    ).pipe(\r\n      map(([entities, user]) => entities[user.id]),\r\n      tap(profile => profile && this.store.dispatch(new ProfileActions.ProfileSuccess(profile))),\r\n      map(profile => !!profile),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  hasProfileInApi(): Observable<boolean> {\r\n    return this.profileService.getMyProfile().pipe(\r\n      map(profile => new ProfileActions.ProfileSuccess(profile)),\r\n      tap((action: ProfileActions.ProfileSuccess) => this.store.dispatch(action)),\r\n      map(profile => !!profile),\r\n      catchError((error) => {\r\n        if(error.status === 401) {\r\n          this.store.dispatch(new AuthActions.Logout());\r\n        } else {\r\n          this.router.navigate(['/404']);\r\n        }\r\n        return of(false);\r\n      })\r\n    )\r\n  }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.hasProfileInStore().pipe(\r\n      switchMap(inStore =>  \r\n        inStore \r\n          ? of(inStore) \r\n          : this.hasProfileInApi()\r\n      )\r\n    )\r\n  }\r\n}","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { User } from '../../auth/models/user';\r\nimport * as AccountsActions from '../actions/accounts.action';\r\nimport * as ProfileActions from '../actions/profile.action';\r\n\r\nexport const adapter: EntityAdapter<User> = createEntityAdapter<User>({\r\n  selectId: (user: User) => user.id,\r\n  sortComparer: false,\r\n});\r\n\r\nexport interface State extends EntityState<User> {}\r\nexport const initialState: State = adapter.getInitialState();\r\n\r\nexport function reducer(\r\n  state = initialState,\r\n  action:\r\n    | AccountsActions.AccountsActionUnion\r\n    | ProfileActions.ProfileActionUnion\r\n): State {\r\n  switch (action.type) {\r\n    case AccountsActions.AccountsActionTypes.GetAccountsSuccess: {\r\n      return adapter.addMany(action.payload, state);\r\n    }\r\n\r\n    case ProfileActions.ProfileActionTypes.ProfileSuccess: {\r\n      return adapter.addOne(action.payload, state);\r\n    }\r\n\r\n    case ProfileActions.ProfileActionTypes.ProfileFailure: {\r\n      return adapter.removeAll(state);\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","import * as AccountsActions from '../actions/accounts.action';\r\n\r\nexport interface State {\r\n  ids: string[];\r\n}\r\n\r\nexport const initialState: State = {\r\n  ids: []\r\n}\r\n\r\nexport function reducer(\r\n  state: State = initialState,\r\n  action: AccountsActions.AccountsActionUnion\r\n) {\r\n  switch(action.type) {\r\n    case AccountsActions.AccountsActionTypes.GetAccountsSuccess: {\r\n      return {\r\n        ...state,\r\n        ids: action.payload.map(user => user.id)\r\n      } \r\n    }\r\n\r\n    case AccountsActions.AccountsActionTypes.GetAccountsFailure: {\r\n      return initialState;\r\n    }\r\n    \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAccountsIds = (state: State) => state.ids;","import {\r\n  createSelector,\r\n  createFeatureSelector,\r\n  ActionReducerMap,\r\n} from '@ngrx/store';\r\nimport * as fromRoot from '../../reducers';\r\nimport * as fromProfile from './profile.reducer';\r\nimport * as fromAccounts from './accounts.reducer';\r\nimport * as fromBrowse from './browse-accounts.reducer';\r\n\r\nexport interface AccountsState {\r\n  accounts: fromAccounts.State;\r\n  profile: fromProfile.State;\r\n  browse: fromBrowse.State\r\n}\r\n\r\nexport interface State extends fromRoot.State {\r\n  accounts: AccountsState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AccountsState> = {\r\n  accounts: fromAccounts.reducer,\r\n  profile: fromProfile.reducer,\r\n  browse: fromBrowse.reducer\r\n};\r\n\r\nexport const selectAccountsState = createFeatureSelector<State, AccountsState>('accounts');\r\n\r\nexport const getAccountEntitiesState = createSelector(\r\n  selectAccountsState,\r\n  (state: AccountsState) => state.accounts\r\n);\r\n\r\nexport const {\r\n  selectEntities: getAccountEntities,\r\n} = fromAccounts.adapter.getSelectors(getAccountEntitiesState);\r\n\r\nexport const selectProfileState = createSelector(\r\n  selectAccountsState,\r\n  (state: AccountsState) => state.profile\r\n);\r\n\r\nexport const getProfileId = createSelector(\r\n  selectProfileState, \r\n  fromProfile.getProfileId\r\n);\r\n\r\nexport const getProfile = createSelector(\r\n  getAccountEntities,\r\n  getProfileId,\r\n  (accounts, id) => accounts[id]\r\n);\r\n\r\nexport const selectBrowseAccountsState = createSelector(\r\n  selectAccountsState,\r\n  (state: AccountsState) => state.browse\r\n);\r\n\r\nexport const getAccountsIds = createSelector(\r\n  selectBrowseAccountsState,\r\n  fromBrowse.getAccountsIds\r\n);\r\n\r\nexport const getAccounts = createSelector(\r\n  getAccountEntities,\r\n  getAccountsIds,\r\n  (accounts, ids) => ids.map(id => accounts[id]) \r\n);\r\n","import { User } from 'src/app/auth/models/user';\r\nimport * as ProfileActions from '../actions/profile.action';\r\n\r\nexport interface State {\r\n  id: string;\r\n}\r\n\r\nexport const initialState: State = {\r\n  id: null\r\n}\r\n\r\nexport function reducer(\r\n  state: State = initialState,\r\n  action: ProfileActions.ProfileActionUnion\r\n) {\r\n  switch(action.type) {\r\n    case ProfileActions.ProfileActionTypes.ProfileSuccess: {\r\n      return {\r\n        ...state,\r\n        id: action.payload.id\r\n      } \r\n    }\r\n\r\n    case ProfileActions.ProfileActionTypes.ProfileFailure: {\r\n      return initialState;\r\n    }\r\n    \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProfileId = (state: State) => state.id;","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from 'src/app/auth/models/user';\r\nimport { Observable } from 'rxjs';\r\nimport { ENDPOINT } from 'src/app/app.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrowseAccountsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllAccounts(): Observable<User[]> {\r\n    return this.http.get<User[]>(`${ENDPOINT}/accounts`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from 'src/app/auth/models/user';\r\nimport { Observable } from 'rxjs';\r\nimport { ENDPOINT } from 'src/app/app.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMyProfile(): Observable<User> {\r\n    return this.http.get<User>(`${ENDPOINT}/profile`);\r\n  }\r\n}\r\n"],"sourceRoot":""}